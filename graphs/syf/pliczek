
--------------------------------------------------------------------------------

Graf (10, 50%) klasy IterativeGenerator<DirectedAdjacencyMatrixGraph>
Postać wewnętrzna:
0 1 1 1 1 1 1 1 1 1 
0 0 1 1 1 1 1 1 1 1 
0 0 0 1 1 1 1 1 1 1 
0 0 0 0 1 1 1 1 1 1 
0 0 0 0 0 1 1 1 1 1 
0 0 0 0 0 0 1 1 1 1 
0 0 0 0 0 0 0 1 1 1 
0 0 0 0 0 0 0 0 1 1 
0 0 0 0 0 0 0 0 0 1 
0 0 0 0 0 0 0 0 0 0 

Postać abstrakcyjna:
[0]: 1 2 3 4 5 6 7 8 9 
[1]: 2 3 4 5 6 7 8 9 
[2]: 3 4 5 6 7 8 9 
[3]: 4 5 6 7 8 9 
[4]: 5 6 7 8 9 
[5]: 6 7 8 9 
[6]: 7 8 9 
[7]: 8 9 
[8]: 9 
[9]: 

Przeszukiwanie BFS: 0 1 2 3 4 5 6 7 8 9 
Przeszukiwanie DFS: 0 1 2 3 4 5 6 7 8 9 

Sortowanie BFS: 0 1 2 3 4 5 6 7 8 9 
Sortowanie DFS: 9 8 7 6 5 4 3 2 1 0 


--------------------------------------------------------------------------------

Graf (10, 50%) klasy IterativeGenerator<UndirectedAdjacencyMatrixGraph>
Postać wewnętrzna:
0 1 1 1 1 1 1 1 1 1 
1 0 1 1 1 1 1 1 1 1 
1 1 0 1 1 1 1 1 0 0 
1 1 1 0 0 0 0 0 0 0 
1 1 1 0 0 0 0 0 0 0 
1 1 1 0 0 0 0 0 0 0 
1 1 1 0 0 0 0 0 0 0 
1 1 1 0 0 0 0 0 0 0 
1 1 0 0 0 0 0 0 0 0 
1 1 0 0 0 0 0 0 0 0 

Postać abstrakcyjna:
[0]: 1 2 3 4 5 6 7 8 9 
[1]: 0 2 3 4 5 6 7 8 9 
[2]: 0 1 3 4 5 6 7 
[3]: 0 1 2 
[4]: 0 1 2 
[5]: 0 1 2 
[6]: 0 1 2 
[7]: 0 1 2 
[8]: 0 1 
[9]: 0 1 

Przeszukiwanie BFS: 0 1 2 3 4 5 6 7 8 9 
Przeszukiwanie DFS: 0 1 2 3 4 5 6 7 8 9 


--------------------------------------------------------------------------------

Graf (10, 50%) klasy IterativeGenerator<DirectedIncidenceMatrixGraph>
Postać wewnętrzna:
1 -1 0 0 0 0 0 0 0 0 
1 0 -1 0 0 0 0 0 0 0 
1 0 0 -1 0 0 0 0 0 0 
1 0 0 0 -1 0 0 0 0 0 
1 0 0 0 0 -1 0 0 0 0 
1 0 0 0 0 0 -1 0 0 0 
1 0 0 0 0 0 0 -1 0 0 
1 0 0 0 0 0 0 0 -1 0 
1 0 0 0 0 0 0 0 0 -1 
0 1 -1 0 0 0 0 0 0 0 
0 1 0 -1 0 0 0 0 0 0 
0 1 0 0 -1 0 0 0 0 0 
0 1 0 0 0 -1 0 0 0 0 
0 1 0 0 0 0 -1 0 0 0 
0 1 0 0 0 0 0 -1 0 0 
0 1 0 0 0 0 0 0 -1 0 
0 1 0 0 0 0 0 0 0 -1 
0 0 1 -1 0 0 0 0 0 0 
0 0 1 0 -1 0 0 0 0 0 
0 0 1 0 0 -1 0 0 0 0 
0 0 1 0 0 0 -1 0 0 0 
0 0 1 0 0 0 0 -1 0 0 
0 0 1 0 0 0 0 0 -1 0 
0 0 1 0 0 0 0 0 0 -1 
0 0 0 1 -1 0 0 0 0 0 
0 0 0 1 0 -1 0 0 0 0 
0 0 0 1 0 0 -1 0 0 0 
0 0 0 1 0 0 0 -1 0 0 
0 0 0 1 0 0 0 0 -1 0 
0 0 0 1 0 0 0 0 0 -1 
0 0 0 0 1 -1 0 0 0 0 
0 0 0 0 1 0 -1 0 0 0 
0 0 0 0 1 0 0 -1 0 0 
0 0 0 0 1 0 0 0 -1 0 
0 0 0 0 1 0 0 0 0 -1 
0 0 0 0 0 1 -1 0 0 0 
0 0 0 0 0 1 0 -1 0 0 
0 0 0 0 0 1 0 0 -1 0 
0 0 0 0 0 1 0 0 0 -1 
0 0 0 0 0 0 1 -1 0 0 
0 0 0 0 0 0 1 0 -1 0 
0 0 0 0 0 0 1 0 0 -1 
0 0 0 0 0 0 0 1 -1 0 
0 0 0 0 0 0 0 1 0 -1 
0 0 0 0 0 0 0 0 1 -1 

Postać abstrakcyjna:
[0]: 1 2 3 4 5 6 7 8 9 
[1]: 2 3 4 5 6 7 8 9 
[2]: 3 4 5 6 7 8 9 
[3]: 4 5 6 7 8 9 
[4]: 5 6 7 8 9 
[5]: 6 7 8 9 
[6]: 7 8 9 
[7]: 8 9 
[8]: 9 
[9]: 

Przeszukiwanie BFS: 0 1 2 3 4 5 6 7 8 9 
Przeszukiwanie DFS: 0 1 2 3 4 5 6 7 8 9 

Sortowanie BFS: 0 1 2 3 4 5 6 7 8 9 
Sortowanie DFS: 9 8 7 6 5 4 3 2 1 0 


--------------------------------------------------------------------------------

Graf (10, 50%) klasy IterativeGenerator<UndirectedIncidenceMatrixGraph>
Postać wewnętrzna:
1 1 0 0 0 0 0 0 0 0 
1 0 1 0 0 0 0 0 0 0 
1 0 0 1 0 0 0 0 0 0 
1 0 0 0 1 0 0 0 0 0 
1 0 0 0 0 1 0 0 0 0 
1 0 0 0 0 0 1 0 0 0 
1 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 1 0 
1 0 0 0 0 0 0 0 0 1 
0 1 1 0 0 0 0 0 0 0 
0 1 0 1 0 0 0 0 0 0 
0 1 0 0 1 0 0 0 0 0 
0 1 0 0 0 1 0 0 0 0 
0 1 0 0 0 0 1 0 0 0 
0 1 0 0 0 0 0 1 0 0 
0 1 0 0 0 0 0 0 1 0 
0 1 0 0 0 0 0 0 0 1 
0 0 1 1 0 0 0 0 0 0 
0 0 1 0 1 0 0 0 0 0 
0 0 1 0 0 1 0 0 0 0 
0 0 1 0 0 0 1 0 0 0 
0 0 1 0 0 0 0 1 0 0 

Postać abstrakcyjna:
[0]: 1 2 3 4 5 6 7 8 9 
[1]: 0 2 3 4 5 6 7 8 9 
[2]: 0 1 3 4 5 6 7 
[3]: 0 1 2 
[4]: 0 1 2 
[5]: 0 1 2 
[6]: 0 1 2 
[7]: 0 1 2 
[8]: 0 1 
[9]: 0 1 

Przeszukiwanie BFS: 0 1 2 3 4 5 6 7 8 9 
Przeszukiwanie DFS: 0 1 2 3 4 5 6 7 8 9 


--------------------------------------------------------------------------------

Graf (10, 50%) klasy IterativeGenerator<DirectedAdjacencyListGraph>
Postać wewnętrzna:
[0]: 1 2 3 4 5 6 7 8 9 
[1]: 2 3 4 5 6 7 8 9 
[2]: 3 4 5 6 7 8 9 
[3]: 4 5 6 7 8 9 
[4]: 5 6 7 8 9 
[5]: 6 7 8 9 
[6]: 7 8 9 
[7]: 8 9 
[8]: 9 
[9]: 

Postać abstrakcyjna:
[0]: 1 2 3 4 5 6 7 8 9 
[1]: 2 3 4 5 6 7 8 9 
[2]: 3 4 5 6 7 8 9 
[3]: 4 5 6 7 8 9 
[4]: 5 6 7 8 9 
[5]: 6 7 8 9 
[6]: 7 8 9 
[7]: 8 9 
[8]: 9 
[9]: 

Przeszukiwanie BFS: 0 1 2 3 4 5 6 7 8 9 
Przeszukiwanie DFS: 0 1 2 3 4 5 6 7 8 9 

Sortowanie BFS: 0 1 2 3 4 5 6 7 8 9 
Sortowanie DFS: 9 8 7 6 5 4 3 2 1 0 


--------------------------------------------------------------------------------

Graf (10, 50%) klasy IterativeGenerator<UndirectedAdjacencyListGraph>
Postać wewnętrzna:
[0]: 1 2 3 4 5 6 7 8 9 
[1]: 0 2 3 4 5 6 7 8 9 
[2]: 0 1 3 4 5 6 7 
[3]: 0 1 2 
[4]: 0 1 2 
[5]: 0 1 2 
[6]: 0 1 2 
[7]: 0 1 2 
[8]: 0 1 
[9]: 0 1 

Postać abstrakcyjna:
[0]: 1 2 3 4 5 6 7 8 9 
[1]: 0 2 3 4 5 6 7 8 9 
[2]: 0 1 3 4 5 6 7 
[3]: 0 1 2 
[4]: 0 1 2 
[5]: 0 1 2 
[6]: 0 1 2 
[7]: 0 1 2 
[8]: 0 1 
[9]: 0 1 

Przeszukiwanie BFS: 0 1 2 3 4 5 6 7 8 9 
Przeszukiwanie DFS: 0 1 2 3 4 5 6 7 8 9 


--------------------------------------------------------------------------------

Graf (10, 30%) klasy BothEulerAndHamiltonGenerator<UndirectedAdjacencyMatrixGraph>
[0]: 2 3 6 8 
[1]: 5 8 
[2]: 0 4 6 8 
[3]: 0 8 
[4]: 2 9 
[5]: 1 7 
[6]: 0 2 
[7]: 5 9 
[8]: 0 1 2 3 
[9]: 4 7 

Cykle Hamiltona:
0 3 8 1 5 7 9 4 2 6 	Kontynuować? 
Obwody Eulera:
0 2 4 9 7 5 1 8 0 3 8 2 6 	Kontynuować? 

--------------------------------------------------------------------------------

Graf (10, 30%) klasy OnlyEulerAndNotHamiltonGenerator<UndirectedAdjacencyMatrixGraph>
[0]: 5 8 
[1]: 3 4 
[2]: 3 5 7 8 
[3]: 1 2 7 8 
[4]: 1 6 
[5]: 0 2 
[6]: 4 8 
[7]: 2 3 
[8]: 0 2 3 6 
[9]: 

Cykle Hamiltona:

Obwody Eulera:
0 5 2 3 1 4 6 8 2 7 3 8 	Kontynuować? 

--------------------------------------------------------------------------------

Graf (10, 30%) klasy OnlyHamiltonAndNotEulerGenerator<UndirectedAdjacencyMatrixGraph>
[0]: 1 3 6 7 8 
[1]: 0 3 4 6 
[2]: 5 9 
[3]: 0 1 
[4]: 1 7 
[5]: 2 7 
[6]: 0 1 8 9 
[7]: 0 4 5 
[8]: 0 6 
[9]: 2 6 

Cykle Hamiltona:
0 3 1 4 7 5 2 9 6 8 	Kontynuować? 
Obwody Eulera:


--------------------------------------------------------------------------------

Graf (10, 30%) klasy NeitherEulerNorHamiltonGenerator<UndirectedAdjacencyMatrixGraph>
[0]: 2 8 
[1]: 5 8 
[2]: 0 4 6 8 
[3]: 5 6 
[4]: 2 6 7 
[5]: 1 3 
[6]: 2 3 4 7 8 
[7]: 4 6 
[8]: 0 1 2 6 
[9]: 

Cykle Hamiltona:

Obwody Eulera:


--------------------------------------------------------------------------------

